name: Deploy PostgreSQL RDS DB instance

on:
  push:
    branches:
      - main

jobs:
  deploy-rds-db:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install AWS CLI
        run: |
            if ! command -v aws &> /dev/null; then
            curl -sSf "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
            else
            aws --version
            aws --version 2>&1 | grep "aws-cli/2."  # Check if AWS CLI version 2 is installed
            if [ $? -eq 0 ]; then
                echo "AWS CLI version 2 is already installed."
            else
                echo "Updating AWS CLI..."
                curl -sSf "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
                unzip awscliv2.zip
                sudo ./aws/install --update
            fi
            fi

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ACCESS_KEY_ID1 }}
          aws-region: us-east-1  

      - name: Create RDS DB instance
        run: |
            aws rds create-db-instance --db-instance-identifier Database5 --db-instance-class db.t3.micro --engine postgres --db-name my_db --allocated-storage 20 --port 5432 --master-username dbadmin --master-user-password admin12345 --publicly-accessible
  
      - name: Wait for DB instance to be available
        run: |
            aws rds wait db-instance-available --db-instance-identifier Database5
  
            - name: Get default security group ID
            id: get-default-security-group-id
            run: |
              vpc_id=$(aws ec2 describe-vpcs --query "Vpcs[?IsDefault==true].VpcId" --output text)
              security_group_id=$(aws ec2 describe-security-groups --filters "Name=vpc-id,Values=$vpc_id" "Name=group-name,Values=default" --query "SecurityGroups[0].GroupId" --output text)
              echo "::set-output name=security-group-id::$security_group_id"
    
      - name: Authorize ingress rule for PostgreSQL
        run: |
              security_group_id=${{ steps.get-default-security-group-id.outputs.security-group-id }}
              aws ec2 authorize-security-group-ingress --group-id $security_group_id --protocol tcp --port 5432 --cidr 0.0.0.0/0
    
      - name: Modify DB instance to use default security group
        run: |
              security_group_id=${{ steps.get-default-security-group-id.outputs.security-group-id }}
              aws rds modify-db-instance --db-instance-identifier Database4 --vpc-security-group-ids $security_group_id --apply-immediately